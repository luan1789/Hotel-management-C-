@model Model.EF.tblProduct

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "ProductAdmin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    <div class="main-body">
        <div class="page-body">
            <div class="row">
                <div class="col-md-12 mb-2">
                    <div class="page-header-breadcrumb">
                        <ul class="breadcrumb-title">
                            <li class="breadcrumb-item">
                                <a href="">
                                    <i class="feather icon-home"></i> Home
                                </a>
                            </li>
                            <li class="breadcrumb-item">
                                <a href="">Product</a>
                            </li>
                            <li class="breadcrumb-item"><a href="">Add new</a></li>
                        </ul>
                    </div>
                </div>
            </div>
            @Html.AntiForgeryToken()
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-header">
                        <h2 class="text-uppercase text-center">Create new product</h2>
                    </div>
                    <div class="card-block">
                        <div class="row">
                            <div class="col-md-6 m-auto">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.phoneID)
                                <div class="form-group">
                                    @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.categoryID, "categoryID", htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.DropDownList("categoryID", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.categoryID, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.imagePath, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @*@Html.EditorFor(model => model.imagePath, new { htmlAttributes = new { @class = "form-control" } })*@
                                    <input type="file" id="imgfile" name="imgfile" />
                                    @Html.HiddenFor(model => model.imagePath)
                                    @Html.ValidationMessageFor(model => model.imagePath, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        <div class="checkbox">
                                            @Html.EditorFor(model => model.status)
                                            @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group mt-3">
                                    <button type="submit" class="btn btn-primary m-b-0"> Create </button>
                                    <a href="@Url.Action("Index", "ProductAdmin")" class="btn btn-secondary text-white">Back to list</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
